// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Role {
  id        String     @id
  name      String
  UserRoles UserRole[]
}

model UserRole {
  id     Int    @id @default(autoincrement())
  userId String
  roleId String
  user   User   @relation(fields: [userId], references: [id])
  role   Role   @relation(fields: [roleId], references: [id])
}

model User {
  id           String         @id
  username     String         @unique
  badges       Badge[]
  UserRoles    UserRole[]
  userBadges   UserBadge[]
  tradeCreated Trade[]        @relation(name: "tradeCreated")
  tradeOffers  Trade[]        @relation(name: "tradeOffers")
  board        Board?
  claimHistory ClaimHistory[]
}

model Badge {
  id          Int          @id @default(autoincrement())
  creator     User         @relation(fields: [creatorId], references: [id])
  creatorId   String
  name        String
  description String
  svg         String
  limit       Int
  userBadges  UserBadge[]
  tradeable   Boolean      @default(false)
  active      Boolean      @default(true)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  claimToken  ClaimToken[]

  @@index([name])
}

model UserBadge {
  id         Int          @id @default(autoincrement())
  user       User         @relation(fields: [userId], references: [id])
  userId     String
  badge      Badge        @relation(fields: [badgeId], references: [id])
  badgeId    Int
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  boardBadge BoardBadge[]
  tradeItem  TradeItem[]
}

model Trade {
  id         Int         @id @default(autoincrement())
  sender     User        @relation(name: "tradeCreated", fields: [senderId], references: [id])
  senderId   String
  receiver   User        @relation(name: "tradeOffers", fields: [receiverId], references: [id])
  receiverId String
  accepted   Boolean?
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  tradeItem  TradeItem[]
}

model TradeItem {
  id          Int       @id @default(autoincrement())
  trade       Trade     @relation(fields: [tradeId], references: [id])
  tradeId     Int
  userBadge   UserBadge @relation(fields: [userBadgeId], references: [id])
  userBadgeId Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model ClaimToken {
  id           Int            @id @default(autoincrement())
  token        String         @unique
  badge        Badge          @relation(fields: [badgeId], references: [id])
  badgeId      Int
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  claimHistory ClaimHistory[]
}

model Board {
  id         Int          @id @default(autoincrement())
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  user       User         @relation(fields: [userId], references: [id])
  userId     String       @unique
  boardBadge BoardBadge[]
}

model BoardBadge {
  id          Int       @id @default(autoincrement())
  position    Int
  userBadge   UserBadge @relation(fields: [userBadgeId], references: [id])
  userBadgeId Int
  board       Board     @relation(fields: [boardId], references: [id])
  boardId     Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model ClaimHistory {
  id           Int        @id @default(autoincrement())
  user         User       @relation(fields: [userId], references: [id])
  userId       String
  claimToken   ClaimToken @relation(fields: [claimTokenId], references: [id])
  claimTokenId Int
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}
